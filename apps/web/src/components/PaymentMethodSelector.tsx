import { cn } from '@decebal/ui/lib/utils'
import { Check } from 'lucide-react'
import type React from 'react'
import EthereumIcon from './icons/EthereumIcon'
import SolanaIcon from './icons/SolanaIcon'

interface PaymentMethodSelectorProps {
  selectedMethod: string
  onSelectMethod: (method: string) => void
}

const PaymentMethodSelector: React.FC<PaymentMethodSelectorProps> = ({
  selectedMethod,
  onSelectMethod,
}) => {
  const paymentMethods = [
    {
      id: 'solana',
      name: 'Solana Pay',
      icon: <SolanaIcon className="h-5 w-5" />,
      description: 'Pay with SOL crypto',
    },
    {
      id: 'stripe',
      name: 'Credit Card',
      icon: (
        <svg className="h-5 w-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="5" width="20" height="14" rx="2" stroke="currentColor" strokeWidth="2" />
          <path d="M2 10H22" stroke="currentColor" strokeWidth="2" />
        </svg>
      ),
      description: 'Pay with debit/credit card',
    },
    {
      id: 'paypal',
      name: 'PayPal',
      icon: (
        <svg className="h-5 w-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M19.5121 7.14968C19.5634 6.76468 19.5121 6.49218 19.3583 6.21968C19.1533 5.84993 18.8458 5.63743 18.487 5.48618C18.1283 5.33493 17.6158 5.23243 17.052 5.18118C16.4883 5.12993 15.8733 5.12993 15.2071 5.12993H11.1071C10.9533 5.12993 10.8508 5.18118 10.7483 5.23243C10.6458 5.33493 10.5946 5.43743 10.5946 5.59993L9.36212 13.0324C9.36212 13.1349 9.36212 13.2374 9.41337 13.2887C9.46462 13.3399 9.51587 13.3912 9.61837 13.3912H11.3633C11.5171 13.3912 11.6708 13.2887 11.6708 13.0837V12.9812L12.1321 9.96968C12.1321 9.86718 12.1833 9.76468 12.2346 9.71343C12.2858 9.66218 12.3883 9.61093 12.4908 9.61093H13.3108C15.2583 9.61093 16.7458 9.14218 17.6671 8.15343C18.077 7.74218 18.3496 7.33093 18.5546 6.81343C18.5546 6.81343 18.6058 6.76218 18.6058 6.71093C18.9133 6.86218 19.1695 7.06343 19.307 7.36718C19.4608 7.61843 19.4608 7.97693 19.4096 8.38818C19.3071 8.79943 19.1533 9.21068 18.9483 9.56918C18.7946 9.87293 18.5896 10.1242 18.3333 10.3754C18.077 10.6267 17.7696 10.8317 17.4108 10.9829C17.1033 11.1342 16.7446 11.2367 16.3346 11.2879C15.9246 11.3392 15.5146 11.3392 15.0533 11.3392H14.5408C14.2846 11.3392 14.0283 11.4417 13.9258 11.6467L13.4646 14.3662L13.1571 16.2624C13.1571 16.3649 13.1571 16.4162 13.2083 16.4674C13.2596 16.5187 13.3108 16.5699 13.4133 16.5699H15.0533C15.2071 16.5699 15.3608 16.4674 15.3608 16.2624V16.1599L15.8221 13.1999C15.8221 13.0974 15.8733 12.9949 15.9246 12.9437C15.9758 12.8924 16.0783 12.8412 16.1808 12.8412H16.7446C18.6921 12.8412 20.1796 12.3724 21.1008 11.3837C21.5108 10.9724 21.7833 10.5612 21.9883 10.0437C22.1933 9.52618 22.347 8.95743 22.3983 8.38868C22.4495 7.97743 22.4495 7.61893 22.347 7.26043C22.2445 6.90193 22.0908 6.59818 21.8345 6.34693C21.5783 6.09568 21.2708 5.89443 20.912 5.74318C20.5533 5.59193 20.092 5.48943 19.5795 5.48943C19.5795 5.48943 19.5283 5.48943 19.5283 5.43818C19.0671 5.13443 18.4008 5.02068 17.682 5.02068C16.9633 5.02068 16.1433 5.13443 15.2733 5.13443H11.212C10.8533 5.13443 10.5458 5.28568 10.3921 5.59068L8.85338 14.9912C8.80213 15.1449 8.80213 15.2474 8.85338 15.3499C8.90463 15.4524 9.00713 15.5037 9.15838 15.5037H11.6196C11.7733 15.5037 11.927 15.4012 11.927 15.1962V15.0937L12.5933 11.1874L13.1058 8.18193C13.1058 8.07943 13.157 7.97693 13.2083 7.92568C13.2595 7.87443 13.362 7.82318 13.4645 7.82318H14.2845C16.232 7.82318 17.7195 7.35443 18.6408 6.36568C18.7946 6.21443 18.8971 6.06318 18.9996 5.91193C18.9996 5.91193 19.1533 5.91193 19.2558 5.91193C19.5633 5.91193 19.8708 5.96318 20.127 6.01443C20.3833 6.06568 20.5883 6.22818 20.7933 6.39068C20.9983 6.60193 21.1008 6.86443 21.1008 7.17943C21.0495 7.54918 20.9983 7.74918 20.7933 8.01168C20.637 8.27418 20.3808 8.53668 20.0733 8.69918C19.7658 8.86168 19.407 9.02418 18.9458 9.12668C18.4845 9.22918 17.972 9.22918 17.407 9.22918H16.9458C16.6895 9.22918 16.4333 9.33168 16.3308 9.53668L15.4595 14.5949C15.4595 14.6974 15.4595 14.7487 15.5108 14.7999C15.562 14.8512 15.6133 14.9024 15.7158 14.9024H17.8658C18.0195 14.9024 18.1733 14.7999 18.1733 14.5949V14.4924L18.6345 11.5324C18.6345 11.4299 18.6858 11.3274 18.737 11.2762C18.7883 11.2249 18.8908 11.1737 18.9933 11.1737H19.5058C21.4533 11.1737 22.9408 10.7049 23.862 9.71618C24.272 9.30493 24.5458 8.89368 24.7508 8.37618C24.9558 7.85868 25.1095 7.28993 25.1608 6.72118C25.212 6.14118 25.1608 5.67243 24.9558 5.31393C24.7508 4.95543 24.4433 4.65168 24.0333 4.45043C23.6233 4.24918 23.0595 4.09793 22.347 4.04668C21.6345 3.99543 20.7645 3.99543 19.7408 3.99543H15.7158C15.3058 3.99543 14.947 4.14668 14.6908 4.45043L13.0495 14.4412C12.9983 14.5949 12.9983 14.6974 13.0495 14.7999C13.1008 14.9024 13.2033 14.9537 13.3545 14.9537H16.0258C16.1795 14.9537 16.3333 14.8512 16.3333 14.6462V14.5437L17 10.5874L17.5125 7.58193C17.5125 7.47943 17.5638 7.37693 17.615 7.32568C17.6663 7.27443 17.7688 7.22318 17.8713 7.22318H18.6913C20.6388 7.22318 22.1263 6.75443 23.0475 5.76568C23.3038 5.50318 23.5088 5.19943 23.6625 4.88443C23.7138 4.88443 23.765 4.88443 23.765 4.88443C24.02 4.88443 24.2763 4.93568 24.48 5.03818C24.6338 5.14068 24.7875 5.29193 24.8388 5.49318C24.89 5.69443 24.89 5.94693 24.8388 6.25068C24.7875 6.55443 24.7363 6.85818 24.5825 7.11068C24.4288 7.41443 24.225 7.66693 23.9688 7.87943C23.7125 8.09193 23.4563 8.24318 23.1488 8.34568C22.8413 8.44818 22.4825 8.49943 22.1238 8.54943C21.765 8.60068 21.3038 8.60068 20.8425 8.60068H20.3813C20.125 8.60068 19.8688 8.70318 19.7663 8.90818L19.5121 10.0437V7.14968Z"
            fill="currentColor"
          />
        </svg>
      ),
      description: 'Pay with PayPal',
    },
  ]

  return (
    <div className="grid grid-cols-3 gap-2">
      {paymentMethods.map((method) => (
        <div
          key={method.id}
          className={cn(
            'flex flex-col items-center justify-center p-3 rounded-lg border cursor-pointer transition-all',
            selectedMethod === method.id
              ? 'border-brand-teal bg-brand-teal/10'
              : 'border-gray-700 hover:border-gray-500'
          )}
          onClick={() => onSelectMethod(method.id)}
        >
          <div className="relative">
            {method.icon}
            {selectedMethod === method.id && (
              <div className="absolute -top-2 -right-2 bg-brand-teal rounded-full p-0.5">
                <Check className="h-3 w-3 text-black" />
              </div>
            )}
          </div>
          <span className="text-sm mt-2 text-center">{method.name}</span>
          <span className="text-xs text-gray-400 text-center mt-1">{method.description}</span>
        </div>
      ))}
    </div>
  )
}

export default PaymentMethodSelector
