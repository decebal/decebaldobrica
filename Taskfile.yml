version: '3'

vars:
  PKG_MANAGER: bun

tasks:
  # === DEFAULT ===
  default:
    desc: Show available tasks
    cmds:
      - task --list

  # === DEVELOPMENT ===
  dev:
    desc: Start dev server (web app)
    dir: apps/web
    cmds:
      - '{{.PKG_MANAGER}} run dev'

  dev:admin:
    desc: Start admin dashboard (port 3001)
    dir: apps/newsletter-admin
    cmds:
      - '{{.PKG_MANAGER}} run dev'

  install:
    desc: Install all dependencies
    cmds:
      - '{{.PKG_MANAGER}} install'

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf apps/*/.next apps/*/out packages/*/dist packages/*/.turbo packages/*/coverage

  # === BUILD & DEPLOY ===
  build:
    desc: Build web app for production
    dir: apps/web
    cmds:
      - '{{.PKG_MANAGER}} run build'

  build:admin:
    desc: Build admin dashboard
    dir: apps/newsletter-admin
    cmds:
      - '{{.PKG_MANAGER}} run build'

  build:packages:
    desc: Build all packages
    cmds:
      - cd packages/crypto-subscriptions && {{.PKG_MANAGER}} run build
      - cd packages/email && {{.PKG_MANAGER}} run build
      - cd packages/newsletter && {{.PKG_MANAGER}} run build

  deploy:
    desc: Deploy to Vercel production
    cmds:
      - vercel --prod

  # === CODE QUALITY ===
  lint:
    desc: Run Biome linter
    cmds:
      - '{{.PKG_MANAGER}} run lint'

  lint:fix:
    desc: Fix linting issues
    cmds:
      - '{{.PKG_MANAGER}} run lint:fix'

  format:
    desc: Format code with Biome
    cmds:
      - '{{.PKG_MANAGER}} run format'

  type-check:
    desc: TypeScript type checking
    cmds:
      - '{{.PKG_MANAGER}} run type-check'

  check:
    desc: Run all checks (lint + format + types)
    cmds:
      - task: lint
      - task: format
      - task: type-check

  # === TESTING ===
  test:
    desc: Run E2E tests
    cmds:
      - '{{.PKG_MANAGER}} run test:e2e'

  test:ui:
    desc: Run E2E tests with UI
    cmds:
      - '{{.PKG_MANAGER}} run test:e2e:ui'

  test:debug:
    desc: Debug E2E tests
    cmds:
      - '{{.PKG_MANAGER}} run test:e2e:debug'

  test:install:
    desc: Install Playwright browsers
    cmds:
      - '{{.PKG_MANAGER}} run test:install'

  # === PACKAGES ===
  pkg:crypto:
    desc: Build & test crypto-subscriptions
    dir: packages/crypto-subscriptions
    cmds:
      - '{{.PKG_MANAGER}} run build'
      - '{{.PKG_MANAGER}} test'

  pkg:crypto:test:
    desc: Test crypto-subscriptions
    dir: packages/crypto-subscriptions
    cmds:
      - '{{.PKG_MANAGER}} test'

  pkg:crypto:coverage:
    desc: Test coverage for crypto-subscriptions
    dir: packages/crypto-subscriptions
    cmds:
      - '{{.PKG_MANAGER}} run test:coverage'

  pkg:newsletter:test:
    desc: Test newsletter package
    dir: packages/newsletter
    cmds:
      - '{{.PKG_MANAGER}} test'

  # === CONTENT ===
  create-post:
    desc: Create new blog post with STAR + Golden Nuggets (interactive)
    dir: apps/web
    cmds:
      - '{{.PKG_MANAGER}} run create-post'

  publish:
    desc: 'Publish blog post (usage: task publish -- slug-name)'
    dir: apps/web
    cmds:
      - cmd: |
          if [ -z "{{.CLI_ARGS}}" ]; then
            echo "Usage: task publish -- my-post-slug"
            exit 1
          fi
          {{.PKG_MANAGER}} run publish-post --slug={{.CLI_ARGS}}

  case-study:
    desc: Add new case study (interactive)
    dir: apps/web
    cmds:
      - '{{.PKG_MANAGER}} ./scripts/add-case-study.ts'

  list:posts:
    desc: List all blog posts
    cmds:
      - ls -1 content/blog/*.mdx | sed 's/.*\///;s/\.mdx$//' | nl
